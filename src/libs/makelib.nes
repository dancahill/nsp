if (CFLAGS==null) global CFLAGS="";
if (_LINKAGE_==null) global _LINKAGE_='static';
if (ostype==null) if (_ENV['OS']=='Windows_NT') global ostype='windows';
if (DLFLAGS==null) global DLFLAGS="";

global BINDIR="../../../bin";
global LIBDIR="../../../lib";
global OBJDIR="../../../int";

if (CC=='cl.exe') {
	global HIDDEN="";
} else if (CC=='tcc.exe') {
	global HIDDEN=" 1>nul";
} else {
	global HIDDEN=" 1>/dev/null";
}

function swapslash(OLDSTR) {
	if (ostype=='posix') return OLDSTR;
	return string.join(string.split(OLDSTR, "/"), "\\");
}

function newer(file1, file2) {
	s1=file.stat(file1);
	s2=file.stat(file2);
	if (typeof(s1)!='table') {
		print("missing source ",file1,"?\n");
		return -1;
	}
	if (typeof(s2)!='table') return 1;
	if (s1.mtime>=s2.mtime) return 1;
	return 0;
}

function build_objs(CC, CFLAGS, OBJECTS, OTYPE, INTDIR) {
	if (CC=='tcc.exe') {
		if (string.sub(INTDIR, 0, 8)=='libnesla') INTDIR=string.sub(INTDIR, 8);
	}
	OLIST=string.split(OBJECTS, " ");
	for (i=0;i<sizeof(OLIST);i++) {
		s1=file.stat(swapslash(OBJDIR+"/"+INTDIR));
		if (typeof(s1)!='table') system("mkdir "+swapslash(OBJDIR+"/"+INTDIR));
		s1=file.stat(swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE));
		if (typeof(s1)!='table') system("mkdir "+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE));
		ONAME=string.split(OLIST[i], ".");
		if (ONAME[1]!='o') continue;
		if (newer(ONAME[0]+".c", swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+ONAME[0]+".o"))) {
//			print("  "+CC+" "+ONAME[0]+".o\n");
			if (OTYPE=='shared') {
//				print (CC+" "+DLFLAGS+CFLAGS+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+ONAME[0]+".o")+" "+ONAME[0]+".c"+"\n");
				print ("  CC "+ONAME[0]+".o\n");
				system(CC+" "+DLFLAGS+CFLAGS+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+ONAME[0]+".o")+" "+ONAME[0]+".c"+HIDDEN);
			} else {
//				print (CC+" "+CFLAGS+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+ONAME[0]+".o")+" "+ONAME[0]+".c"+"\n");
				print ("  CC "+ONAME[0]+".o\n");
				system(CC+" "+CFLAGS+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+ONAME[0]+".o")+" "+ONAME[0]+".c"+HIDDEN);
			}
		}
	}
	return;
}

function build_lib(CC, TNAME, OBJECTS, OTYPE, INTDIR) {
	OLIST=string.split(OBJECTS, " ");
	if (CC=='tcc.exe') {
		if (string.sub(TNAME, 0, 8)=='libnesla') TNAME=string.sub(TNAME, 8);
		if (string.sub(INTDIR, 0, 8)=='libnesla') INTDIR=string.sub(INTDIR, 8);
		file.unlink(TNAME+".lib");
		for (i=0;i<sizeof(OLIST);i++) {
//			print("tlib.exe "+swapslash(LIBDIR+"/"+TNAME+".lib +"+OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+OLIST[i])+"\n");
			system("tlib.exe "+swapslash(LIBDIR+"/"+TNAME+".lib +"+OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+OLIST[i]));
		}
		file.unlink(swapslash(LIBDIR+"/"+TNAME+".bak"));
	} else if (CC=='cl.exe') {
		liblist="";
		for (i=0;i<sizeof(OLIST);i++) {
			liblist+=" "+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+OLIST[i]);
		}
		if (OTYPE=='shared') {
			LIBS="/libpath:"+LIBDIR+" gdi32.lib shell32.lib user32.lib winmm.lib libnesla.lib";
			system("link.exe /nologo /subsystem:console /pdb:none /machine:I386 /dll /incremental:no "+LIBS+" /out:"+swapslash(LIBDIR+"/shared/"+TNAME+".dll "+liblist));
		} else {
			system("link.exe -lib /nologo /out:"+swapslash(LIBDIR+"/"+TNAME+".lib "+liblist));
		}
	} else {
		liblist="";
		for (i=0;i<sizeof(OLIST);i++) {
			ONAME=string.split(OLIST[i], ".");
			if (ONAME[1]=='o') {
				liblist+=" "+swapslash(OBJDIR+"/"+INTDIR+"/"+OTYPE+"/"+OLIST[i]);
			} else {
				liblist+=" "+swapslash(OLIST[i]);
			}
		}
		if (OTYPE=='shared') {
			system("gcc -shared -o "+swapslash(LIBDIR+"/shared/"+TNAME+".so "+liblist));
		} else {
			system("ar cru "+swapslash(LIBDIR+"/"+TNAME+".a "+liblist));
			system("ranlib "+swapslash(LIBDIR+"/"+TNAME+".a"));
		}
	}
}

function build_clean(TNAME, OBJECTS) {
	file.unlink(swapslash(LIBDIR+"/shared/"+TNAME+".so"));
	file.unlink(swapslash(LIBDIR+"/shared/"+TNAME+".dll"));
	file.unlink(swapslash(LIBDIR+"/"+TNAME+".a"));
	file.unlink(swapslash(LIBDIR+"/"+TNAME+".lib"));
	OLIST=string.split(OBJECTS, " ");
	for (i=0;i<sizeof(OLIST);i++) {
		ONAME=string.split(OLIST[i], ".");
		file.unlink(swapslash(OBJDIR+"/"+INTDIR+"/shared/"+ONAME[0]+".o"));
		file.unlink(swapslash(OBJDIR+"/"+INTDIR+"/static/"+ONAME[0]+".o"));
		file.unlink(swapslash(OBJDIR+"/"+INTDIR+"/shared/"+ONAME[0]+".obj"));
		file.unlink(swapslash(OBJDIR+"/"+INTDIR+"/static/"+ONAME[0]+".obj"));
	}
	if (ostype=='windows') {
		system("del *.idb *.def *~ 2>nul");
	} else if (ostype=='posix') {
		system("rm -f *.idb *.def *~");
	}
}
