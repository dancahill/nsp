function testtypes() {
#	local a=null;
#	local b=true;
	local c=42;
	local d="stringy";
	local e = { a=1 };

	print("\ttype(a)            expect            [ null ] : [ ", type(a), " ]\n");
	print("\ttype(b)            expect         [ boolean ] : [ ", type(b), " ]\n");
	print("\ttype(c)            expect          [ number ] : [ ", type(c), " ]\n");
	print("\ttype(d)            expect          [ string ] : [ ", type(d), " ]\n");
	print("\ttype(e)            expect           [ table ] : [ ", type(e), " ]\n");
	return;
}

function testtables() {
	function subf() { return 69; }
	local x=1;
	local ack = { a="x" };

	print("\ttype(CARDS)        expect           [ table ] : [ ", type(CARDS), " ]\n");
	if (string.cmp(type(CARDS), 'table')!=0) { return; }
	print("\tCARDS['1']['name'] expect [ Ace of Diamonds ] : [ ", CARDS['1']['name'], " ]\n");
	CARDS[1].name="aa";
	print("\tCARDS[1].name      expect              [ aa ] : [ ", CARDS[1].name, " ]\n");
	print("\tCARDS[x]['dealt']  expect      [ (null)null ] : [ (", type(CARDS[x]['dealt']), ")", CARDS[x]['dealt'], " ]\n");
	CARDS[x]['dealt']=true;
	print("\tCARDS[x]['dealt']  expect         [ (number)1 : [ (", type(CARDS[x]['dealt']), ")", CARDS[x]['dealt'], " ]\n");
	CARDS=0;

	global tab = {
		{ a1="x", b = pi, [12]=41, [1]=42, 43, 'blah', subf() },
		{ "x", 'y', x = 41, 42, 43, 'blah', [5]=12, heh=";-)" }
	};
	# now add a subtable
	tab['t'] = {
		{ a2="x", b = pi, [12]=41, [1]=42, 43, 'blah', subf() },
		{ "x", 'y', x = 41, 42, 43, 'blah', [5]=12, heh=";-)" }
	};
	# overwrite an existing subtable
	tab['t'] = { [2] = { "x", 'y', x = 41, 42, 43, 'blah', [5]=12, heh=";-)" } };
	# add another sub
	tab['t'][3] = { "x", 'y', x = 41, 42, 43, 'blah', [5]=12, heh=";-)" };
	#printvars();

	return;
}

function testindexing() {
	local i=0;
	local x="";

	for (i=0;i<40;i++) {
		local x=_globals_[@i];
		local t=type(_globals_[x]);
		if (string.cmp(t, 'null')==0) { break; }
		if ((string.cmp(t, 'cfunction')!=0)&&(string.cmp(t, 'function')!=0)) {
			print("\t", i, "\t", t, "\t", x);
			print("\r\t\t\t\t\t\t", _globals_[x], "\n");
		}
	}
}

testtypes();
print("----------------------------------------\n");
testtables();
print("----------------------------------------\n");
testindexing();
