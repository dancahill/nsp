#!/usr/bin/nesla
if (type(expect)=='null') { include("_expect.nes"); }
function testmath() {
	local pi = math.asin(1)*2;
	local n=0;

	expect("1+2*4",   9,  1+2*4);
	expect("(1+2)*4", 12, (1+2)*4);
	expect("1+(2*4)", 9,  1+(2*4));

	n=42; expect("n=42",       42,      n);
	n+=5; expect("n+=5",       47,      n);
	n-=2; expect("n-=2, n+5",  50,      n+5);
	      expect("      n+5",  50,      (n+5));
	n*=3; expect("n*=3",       135,     (n));
	n/=4; expect("n/=4",       33.75,   (n));
	n=42; expect("n=42, n--",  "42 41", tostring(n--)+" "+tostring(n));
	n=42; expect("n=42, n++",  "42 43", tostring(n++)+" "+tostring(n));
	n=42; expect("n=42, --n",  "41 41", tostring(--n)+" "+tostring(n));
	n=42; expect("n=42, ++n",  "43 43", tostring(++n)+" "+tostring(n));

	expect("(n++)",              43,         (n++));
	expect("(n--)",              44,         (n--));
	expect("(n)",                43,         (n));
	expect("3-1.5",              1.5,        (3-1.5));
	expect("-4+1.5",             -2.5,       (-4+1.5));
	expect("-1.5",               -1.5,       -1.5);
	expect("math.abs(-4.2)",     4.2,        math.abs(-4.2));
	expect("math.ceil(2.1)",     3,          math.ceil(2.1));
	expect("math.floor(2.1)",    2,          math.floor(2.1));
	expect("(pi*(4+(4-1+2)))/9", 3.141592,   (pi*(4+(4-1+2)))/9);
	print("\t\t3.141593, actually, but rounding doesn't work\n");
	expect("pi*(2+(1+1))",       "12.56637", pi*(2+(1+1)));
	expect("math.sqrt(2)",       "1.414213", math.sqrt(2));

	print("\tmath.rand()         = ", math.rand());
	for (i=0;i<3;i++) { print(", ", math.rand()); }
	print("\n");
	print("\tmath.rand(10)       = ", math.rand(10));
	for (i=0;i<14;i++) { print(", ", math.rand(10)); }
	print("\n");
	print("\t1/0=[", 1/0, "]\n");
	return;
}
testmath();
